@model string


@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/Chart.min.js"></script>
    <title>Index</title>
</head>
<body>

    <div class="chart-container" style="position: relative; width:100vw">
        <canvas id="myChart"></canvas>
    </div>
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');

        

        var json = @Html.Raw(Model);
        var chartjsData = [];
        for (var i = 0; i < json.length; i++) {
            chartjsData.push(json[i].CPUUsage);
        }
        var chartjsLabels = [];
        for (var i = 0; i < json.length; i++) {
            chartjsLabels.push(json[i].Time);
        }

        console.log(chartjsLabels);

        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                labels: chartjsLabels,
                datasets: [{
                    label: "CPU Usage",
                    fill : false,
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    lineTension: .1,
                    data: chartjsData,
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            suggestedMin: 0,
                            suggestedMax: 100
                        }
                    }]
                }
            }
            // Configuration options go here
        });    </script>

</body>
</html>	

