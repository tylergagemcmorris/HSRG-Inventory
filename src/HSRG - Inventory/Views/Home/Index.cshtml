@model IEnumerable<HSRG___Inventory.Models.InventoryDetail>
@using System.Text.RegularExpressions;

@{
    ViewBag.Title = "Home Page";
}



<style type="text/css">
    .clickable-row {
        cursor: pointer;
    }
</style>

<div class="container-fluid">

    <div class="row">
        @using (Html.BeginForm())
        {
            <p>
                Search: <br /> @Html.TextBox("searchitem")
                <input type="submit" value="Go" class="btn btn-default btn-md" />
            </p>
        }

    </div>  

    <div class="row">
        <div class="button-wrapper">
            <a href="@Url.Action("Index")" class="btn btn-default btn-md" role="button">All</a>
            <a href="@Url.Action("Index", new { TypeFilter = "Clients" } )" class="btn btn-default btn-md" role="button">Clients</a>
            <a href="@Url.Action("Index", new { TypeFilter = "Servers" } )" class="btn btn-default btn-md" role="button">Servers</a>
        </div>
    </div>        
    
    <div class="row">
        <div class="table-responsive">
            <table class="table table-md table-bordered table-condensed table-striped table-hover">
                <tr>
                    @foreach (System.Reflection.PropertyInfo property in ViewBag.properties)
                    {
                        <th style="text-align: center">@property.Name</th>
                    }
                </tr>

                @foreach (var item in Model)
                {
                    <tr class="clickable-row" onclick="document.location='@Url.Action("Details", "Home", new { id = item.ComputerID })';">

                        @foreach (System.Reflection.PropertyInfo property in ViewBag.properties)
                        {
                            if (property.Name == "DriveSpace")
                            {
                                <td style="vertical-align: middle">
                                    <table class="table-md table-bordered table-condensed table-striped table-hover">
                                        <tr>
                                            <th style="text-align: center">Drive</th>
                                            <th style="text-align: center">Free</th>
                                            <th style="text-align: center">Total</th>
                                        </tr>
                                        @if (true)
                                        {
                                            string drivespace = property.GetValue(item, null).ToString();
                                            int drivenum = Regex.Matches(Regex.Escape(drivespace), ":").Count;
                                            int index1 = 0;
                                            int index2;
                                            int index3;
                                            string temp;
                                            for (int i = 0; i < drivenum; i++)
                                            {
                                                <tr>
                                                    @if (true)
                                                    {
                                                        index2 = drivespace.IndexOf(":", index1 + 2) - 1;
                                                        index1 = index2;
                                                        index3 = drivespace.IndexOf(" ", index2);
                                                        temp = drivespace.Substring(index1, index3 - index2);
                                                        <td style="vertical-align: middle">@temp</td>
                                                        index2 = index3;
                                                        index3 = drivespace.IndexOf(" ", index3 + 4);
                                                        temp = drivespace.Substring(index2 + 4, index3 - index2 - 4);
                                                        <td style="vertical-align: middle">@temp</td>
                                                        index2 = index3;
                                                        index3 = drivespace.IndexOf("\r\n", index3 + 1);
                                                        temp = drivespace.Substring(index2, index3 - index2);
                                                        <td style="vertical-align: middle">@temp</td>
                                                    }
                                                </tr>
                                            }
                                        }
                                    </table>
                                </td>
                            }
                            else
                            {
                                <td style="white-space: pre; vertical-align: middle">@property.GetValue(item, null)</td>
                            }
                        }

                    </tr>
                }
            </table>
        </div>
    </div>   
</div>


